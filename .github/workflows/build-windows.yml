name: Build for Windows
on:
  workflow_dispatch:
    inputs:
      build-config:
        description: 'Build configuration (e.g., Release, Debug)'
        default: 'Debug'
        required: false
  push:
    paths:
      - 'src/**'
      - '.github/workflows/build-windows.yml'
  release:
    types: [published]
    
permissions:
  contents: read

jobs:
  build:
    permissions:
      contents: write       # for actions/upload-release-asset to upload release asset
    runs-on: windows-latest

    env:
      PROJECT_NAME: nexus_game
      PROJECT_REPO_NAME: ${{ github.event.repository.name }}
      PROJECT_BUILD_PATH: ${{ github.event.repository.name }}\\build\\${{ github.event.inputs.build-config || 'Debug' }}\\nexus_game
      PROJECT_RELEASE_PATH: ${{ github.event.repository.name }}_dev_win_x64
      PROJECT_RESOURCES_PATH: resources

    steps:
    - name: Checkout this repo
      uses: actions/checkout@v3
      with:
        path: ${{ env.PROJECT_REPO_NAME }}
      
    - name: Setup Environment
      run: |
        mkdir ${{ env.PROJECT_RELEASE_PATH }}
        dir
      shell: cmd

    - name: Install CMake
      run: choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System' -y

    - name: Install Ninja
      run: choco install ninja -y

    - name: Configure the project with Ninja and MSVC
      run: |
        cmake -S . -B build -G "Ninja" -DCMAKE_BUILD_TYPE=${{ github.event.inputs.build-config || 'Debug' }} \
        -DCMAKE_C_COMPILER="C:/Program Files (x86)/Microsoft Visual Studio/2019/BuildTools/VC/Tools/MSVC/14.29.30133/bin/Hostx64/x64/cl.exe" \
        -DCMAKE_CXX_COMPILER="C:/Program Files (x86)/Microsoft Visual Studio/2019/BuildTools/VC/Tools/MSVC/14.29.30133/bin/Hostx64/x64/cl.exe" \
        -DSDL_TEST=OFF
      shell: cmd

    - name: Build the project using Ninja
      run: |
        cmake --build build --config ${{ github.event.inputs.build-config || 'Debug' }}
      shell: cmd

    - name: Generate Artifacts
      run: |
        dir build/${{ github.event.inputs.build-config || 'Debug' }}
        copy /Y build/${{ github.event.inputs.build-config || 'Debug' }}/nexus_game.exe ${{ env.PROJECT_RELEASE_PATH }}\nexus_game.exe
        xcopy ${{ env.PROJECT_REPO_NAME }}\src\${{ env.PROJECT_RESOURCES_PATH }} ${{ env.PROJECT_RELEASE_PATH }}\${{ env.PROJECT_RESOURCES_PATH }} /s /e /i
        copy /Y ${{ env.PROJECT_REPO_NAME }}\README.md ${{ env.PROJECT_RELEASE_PATH }}\README.md
        copy /Y ${{ env.PROJECT_REPO_NAME }}\LICENSE ${{ env.PROJECT_RELEASE_PATH }}\LICENSE
        dir ${{ env.PROJECT_RELEASE_PATH }}
        7z a .\${{ env.PROJECT_RELEASE_PATH }}.zip .\${{ env.PROJECT_RELEASE_PATH }}
      shell: cmd

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.PROJECT_RELEASE_PATH }}.zip
        path: ./${{ env.PROJECT_RELEASE_PATH }}.zip

    - name: Upload Artifact to Release
      uses: softprops/action-gh-release@v1
      with:
        files: ${{ env.PROJECT_RELEASE_PATH }}.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      if: github.event_name == 'release' && github.event.action == 'published'
